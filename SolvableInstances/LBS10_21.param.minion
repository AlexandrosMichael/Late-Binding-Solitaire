MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 31
# CSE_active_eliminated_expressions = 78
# CSE_active_total_size = 229
**VARIABLES**
DISCRETE states_00002_00001 #
{19..22}
DISCRETE states_00002_00002 #
{0..19}
DISCRETE states_00002_00003 #
{0..39}
DISCRETE states_00002_00004 #
{12..50}
DISCRETE states_00002_00005 #
{12..25}
DISCRETE states_00002_00006 #
{25..50}
DISCRETE states_00002_00007 #
{24..50}
DISCRETE states_00002_00008 #
{9..24}
DISCRETE states_00003_00001 #
{13..22}
DISCRETE states_00003_00002 #
{0..39}
DISCRETE states_00003_00003 #
{0..50}
DISCRETE states_00003_00004 #
{12..50}
DISCRETE states_00003_00005 #
{9..50}
DISCRETE states_00003_00006 #
{24..50}
DISCRETE states_00003_00007 #
{9..50}
DISCRETE states_00004_00001 #
{0..48}
DISCRETE states_00004_00002 #
{0..50}
DISCRETE states_00004_00003 #
{0..50}
DISCRETE states_00004_00004 #
{9..50}
DISCRETE states_00004_00005 #
{8..50}
DISCRETE states_00004_00006 #
{9..50}
DISCRETE states_00004_00007 #
{8..50}
DISCRETE states_00005_00001 #
{0..50}
DISCRETE states_00005_00002 #
{0..50}
DISCRETE states_00005_00003 #
{0..50}
DISCRETE states_00005_00004 #
{8..50}
DISCRETE states_00005_00005 #
{8..50}
DISCRETE states_00005_00006 #
{8..50}
DISCRETE states_00006_00001 #
{0..50}
DISCRETE states_00006_00002 #
{0..50}
DISCRETE states_00006_00003 #
{0..50}
DISCRETE states_00006_00004 #
{8..50}
DISCRETE states_00006_00005 #
{8..50}
DISCRETE states_00007_00001 #
{0..50}
DISCRETE states_00007_00002 #
{0..50}
DISCRETE states_00007_00003 #
{0..50}
DISCRETE states_00007_00004 #
{8..50}
DISCRETE states_00008_00001 #
{0..50}
DISCRETE states_00008_00002 #
{0..50}
DISCRETE states_00008_00003 #
{0..50}
DISCRETE states_00009_00001 #
{0..50}
DISCRETE states_00010_00001 #
{0..50}
DISCRETE actionFrom_00001 #
{2..10}
DISCRETE actionFrom_00002 #
{2..9}
DISCRETE actionFrom_00003 #
{2..8}
DISCRETE actionFrom_00004 #
{2..7}
DISCRETE actionFrom_00005 #
{2..6}
DISCRETE actionFrom_00006 #
{2..5}
DISCRETE actionFrom_00007 #
{2..4}
DISCRETE actionFrom_00008 #
{2..3}
DISCRETE actionTo_00001 #
{1..9}
DISCRETE actionTo_00002 #
{1..8}
DISCRETE actionTo_00003 #
{1..7}
DISCRETE actionTo_00004 #
{1..6}
DISCRETE actionTo_00005 #
{1..5}
DISCRETE actionTo_00006 #
{1..4}
DISCRETE actionTo_00007 #
{1..3}
DISCRETE actionTo_00008 #
{1..2}
DISCRETE actionValue_00001 #
{8..50}
**CONSTRAINTS**
w-inintervalset(actionValue_00001, [8,9,12,12,19,19,24,25,39,39,50,50])
**VARIABLES**
DISCRETE actionValue_00002 #
{0..50}
DISCRETE actionValue_00003 #
{0..50}
DISCRETE actionValue_00004 #
{0..50}
DISCRETE actionValue_00005 #
{0..50}
DISCRETE actionValue_00006 #
{0..50}
DISCRETE actionValue_00007 #
{0..50}
DISCRETE actionValue_00008 #
{0..50}
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: Element([22, 19, 0, 39, 12, 25, 50, 24, 9], (actionTo_00001 + -1))
{0..50}
**CONSTRAINTS**
w-inintervalset(aux14, [0,0,9,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008], (actionTo_00002 + -1))
{0..50}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007], (actionTo_00003 + -1))
{0..50}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006], (actionTo_00004 + -1))
{0..50}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005], (actionTo_00005 + -1))
{0..50}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004], (actionTo_00006 + -1))
{0..50}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00007_00001, states_00007_00002, states_00007_00003], (actionTo_00007 + -1))
{0..50}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: Element([states_00008_00001, states_00008_00002], (actionTo_00008 + -1))
{0..50}
DISCRETE aux30 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00007 + actionFrom_00007)
{1..3}
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00005 + actionFrom_00005)
{1..3}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00006 + actionFrom_00006)
{1..3}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00003 + actionFrom_00003)
{1..3}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00004 + actionFrom_00004)
{1..3}
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00001 + actionFrom_00001)
{1..3}
DISCRETE aux36 #Active-CSE: 2 occurrences of this expression or equivalent: ( - actionTo_00002 + actionFrom_00002)
{1..3}
DISCRETE aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -1)
{0..2}
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -1)
{0..3}
BOOL aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -1)
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -1)
{0..6}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -1)
{0..7}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -1)
{0..4}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -1)
{0..5}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00001 + -1)
{0..8}
DISCRETE aux45 #
{0..3}
DISCRETE aux46 #
{0..12}
DISCRETE aux47 #
{0..12}
**CONSTRAINTS**
w-inintervalset(aux47, [0,0,6,6,9,9,11,12])
**VARIABLES**
DISCRETE aux48 #
{0..3}
**CONSTRAINTS**
w-inintervalset(aux48, [0,1,3,3])
**VARIABLES**
DISCRETE aux49 #
{0..3}
DISCRETE aux50 #
{0..12}
DISCRETE aux51 #
{0..12}
DISCRETE aux52 #
{0..3}
DISCRETE aux53 #
{0..12}
DISCRETE aux54 #
{0..3}
DISCRETE aux55 #
{0..3}
DISCRETE aux56 #
{0..12}
DISCRETE aux57 #
{0..12}
DISCRETE aux58 #
{0..3}
DISCRETE aux59 #
{0..3}
DISCRETE aux60 #
{0..12}
DISCRETE aux61 #
{0..3}
DISCRETE aux62 #
{0..12}
DISCRETE aux63 #(actionFrom_00001 + -2)
{0..8}
DISCRETE aux64 #(actionFrom_00002 + -2)
{0..7}
DISCRETE aux65 #(actionFrom_00003 + -2)
{0..6}
DISCRETE aux66 #(actionFrom_00004 + -2)
{0..5}
DISCRETE aux67 #(actionFrom_00005 + -2)
{0..4}
DISCRETE aux68 #(actionFrom_00006 + -2)
{0..3}
DISCRETE aux69 #(actionFrom_00007 + -2)
{0..2}
BOOL aux70 #(actionFrom_00008 + -2)
BOOL aux71 #(actionFrom_00001<4)
BOOL aux72 #(actionFrom_00004<7)
BOOL aux73 #(actionFrom_00001<8)
BOOL aux74 #(actionFrom_00004<3)
BOOL aux75 #(actionFrom_00005<3)
BOOL aux76 #(actionFrom_00002<3)
BOOL aux77 #(actionFrom_00002<7)
BOOL aux78 #(actionFrom_00003<8)
BOOL aux79 #(actionFrom_00003<4)
BOOL aux80 #(actionFrom_00006<3)
BOOL aux81 #(actionFrom_00001<5)
BOOL aux82 #(actionFrom_00001<9)
BOOL aux83 #(actionFrom_00004<4)
BOOL aux84 #(actionFrom_00005<6)
BOOL aux85 #(actionFrom_00002<6)
BOOL aux86 #(actionFrom_00003<7)
BOOL aux87 #(actionFrom_00003<3)
BOOL aux88 #(actionFrom_00001<6)
BOOL aux89 #(actionFrom_00006<4)
BOOL aux90 #(actionFrom_00007<4)
BOOL aux91 #(actionFrom_00004<5)
BOOL aux92 #(actionFrom_00005<5)
BOOL aux93 #(actionFrom_00002<5)
BOOL aux94 #(actionFrom_00003<6)
BOOL aux95 #(actionFrom_00008<3)
BOOL aux96 #(actionFrom_00001<3)
BOOL aux97 #(actionFrom_00006<5)
BOOL aux98 #(actionFrom_00004<6)
BOOL aux99 #(actionFrom_00007<3)
BOOL aux100 #(actionFrom_00001<7)
BOOL aux101 #(actionFrom_00005<4)
BOOL aux102 #(actionFrom_00002<4)
BOOL aux103 #(actionFrom_00003<5)
BOOL aux104 #(actionFrom_00002<8)
**VARIABLES**
ALIAS cards[10]=[22, 19, 0, 39, 12, 25, 50, 24, 9, 8]
**SEARCH**
PRINT[[states_00002_00001],[states_00002_00002],[states_00002_00003],[states_00002_00004],[states_00002_00005],[states_00002_00006],[states_00002_00007],[states_00002_00008],[states_00003_00001],[states_00003_00002],[states_00003_00003],[states_00003_00004],[states_00003_00005],[states_00003_00006],[states_00003_00007],[states_00004_00001],[states_00004_00002],[states_00004_00003],[states_00004_00004],[states_00004_00005],[states_00004_00006],[states_00004_00007],[states_00005_00001],[states_00005_00002],[states_00005_00003],[states_00005_00004],[states_00005_00005],[states_00005_00006],[states_00006_00001],[states_00006_00002],[states_00006_00003],[states_00006_00004],[states_00006_00005],[states_00007_00001],[states_00007_00002],[states_00007_00003],[states_00007_00004],[states_00008_00001],[states_00008_00002],[states_00008_00003],[states_00009_00001],[states_00010_00001],[actionFrom_00001],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionTo_00001],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionValue_00001],[actionValue_00002],[actionValue_00003],[actionValue_00004],[actionValue_00005],[actionValue_00006],[actionValue_00007],[actionValue_00008]]
VARORDER STATIC [states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007, states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006, states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005, states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004, states_00008_00001, states_00008_00002, states_00008_00003, states_00009_00001, states_00010_00001, actionFrom_00001, actionFrom_00002, actionFrom_00003, actionFrom_00004, actionFrom_00005, actionFrom_00006, actionFrom_00007, actionFrom_00008, actionTo_00001, actionTo_00002, actionTo_00003, actionTo_00004, actionTo_00005, actionTo_00006, actionTo_00007, actionTo_00008, actionValue_00001, actionValue_00002, actionValue_00003, actionValue_00004, actionValue_00005, actionValue_00006, actionValue_00007, actionValue_00008]
**CONSTRAINTS**
reify(ineq(actionFrom_00001, 4, -1), aux71)
reify(ineq(actionFrom_00004, 7, -1), aux72)
reify(ineq(actionFrom_00001, 8, -1), aux73)
reify(ineq(actionFrom_00004, 3, -1), aux74)
reify(ineq(actionFrom_00005, 3, -1), aux75)
reify(ineq(actionFrom_00002, 3, -1), aux76)
reify(ineq(actionFrom_00002, 7, -1), aux77)
reify(ineq(actionFrom_00003, 8, -1), aux78)
reify(ineq(actionFrom_00003, 4, -1), aux79)
reify(ineq(actionFrom_00006, 3, -1), aux80)
reify(ineq(actionFrom_00001, 5, -1), aux81)
reify(ineq(actionFrom_00001, 9, -1), aux82)
reify(ineq(actionFrom_00004, 4, -1), aux83)
reify(ineq(actionFrom_00005, 6, -1), aux84)
reify(ineq(actionFrom_00002, 6, -1), aux85)
reify(ineq(actionFrom_00003, 7, -1), aux86)
reify(ineq(actionFrom_00003, 3, -1), aux87)
reify(ineq(actionFrom_00001, 6, -1), aux88)
reify(ineq(actionFrom_00006, 4, -1), aux89)
reify(ineq(actionFrom_00007, 4, -1), aux90)
reify(ineq(actionFrom_00004, 5, -1), aux91)
reify(ineq(actionFrom_00005, 5, -1), aux92)
reify(ineq(actionFrom_00002, 5, -1), aux93)
reify(ineq(actionFrom_00003, 6, -1), aux94)
reify(ineq(actionFrom_00008, 3, -1), aux95)
reify(ineq(actionFrom_00001, 3, -1), aux96)
reify(ineq(actionFrom_00006, 5, -1), aux97)
reify(ineq(actionFrom_00004, 6, -1), aux98)
reify(ineq(actionFrom_00007, 3, -1), aux99)
reify(ineq(actionFrom_00001, 7, -1), aux100)
reify(ineq(actionFrom_00005, 4, -1), aux101)
reify(ineq(actionFrom_00002, 4, -1), aux102)
reify(ineq(actionFrom_00003, 5, -1), aux103)
reify(ineq(actionFrom_00002, 8, -1), aux104)
div(aux19, 13, aux45)
modulo(aux19,13,aux46)
modulo(aux14,13,aux47)
div(actionValue_00001, 13, aux48)
div(aux28, 13, aux49)
modulo(actionValue_00008,13,aux50)
modulo(aux22,13,aux51)
div(aux22, 13, aux52)
modulo(aux16,13,aux53)
div(actionValue_00002, 13, aux54)
div(aux24, 13, aux55)
modulo(aux24,13,aux56)
modulo(aux26,13,aux57)
div(aux26, 13, aux58)
div(states_00009_00001, 13, aux59)
modulo(states_00009_00001,13,aux60)
div(actionValue_00004, 13, aux61)
modulo(actionValue_00004,13,aux62)
watchelement([22, 19, 0, 39, 12, 25, 50, 24, 9], aux44, aux14)
watchelement([19, 0, 39, 12, 25, 50, 24, 9, 8], aux63, actionValue_00001)
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008], aux41, aux16)
watchelement([states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, 8], aux64, actionValue_00002)
watchelement([states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, 8], aux65, actionValue_00003)
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007], aux40, aux19)
watchelement([states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007], aux66, actionValue_00004)
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006], aux43, aux21)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005], aux42, aux22)
watchelement([states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006], aux67, actionValue_00005)
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004], aux38, aux24)
watchelement([states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005], aux68, actionValue_00006)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003], aux37, aux26)
watchelement([states_00007_00002, states_00007_00003, states_00007_00004], aux69, actionValue_00007)
watchelement([states_00008_00001, states_00008_00002], aux39, aux28)
watchelement([states_00008_00002, states_00008_00003], aux70, actionValue_00008)
watched-or({ineq(actionFrom_00006, 3, 0),gaceq(states_00006_00003,states_00007_00003),w-literal(actionTo_00006,3)})
reifyimply(w-literal(states_00002_00003,39), aux71)
watched-or({gaceq(states_00005_00004,states_00006_00004),ineq(actionFrom_00005, 4, 0),w-literal(actionTo_00005,4)})
watched-or({gaceq(states_00004_00003,states_00003_00003),ineq(actionFrom_00003, 3, 0),w-literal(actionTo_00003,3)})
watched-or({gaceq(states_00007_00001,states_00008_00001),w-literal(actionTo_00007,1)})
watched-or({w-literal(states_00002_00002,19),ineq(actionFrom_00001, 2, 0),w-literal(actionTo_00001,2)})
watched-or({gaceq(states_00007_00002,states_00008_00002),ineq(actionFrom_00007, 2, 0),w-literal(actionTo_00007,2)})
watched-or({gaceq(states_00004_00005,states_00005_00005),ineq(actionFrom_00004, 5, 0),w-literal(actionTo_00004,5)})
reifyimply(gaceq(states_00004_00007,states_00005_00006), aux72)
diseq(actionTo_00004,actionFrom_00004)
watched-or({div(actionValue_00003, 13, aux45),modulo(actionValue_00003,13,aux46)})
reifyimply(w-literal(states_00002_00007,24), aux73)
watched-or({gaceq(states_00002_00004,states_00003_00004),ineq(actionFrom_00002, 4, 0),w-literal(actionTo_00002,4)})
reifyimply(gaceq(states_00004_00003,states_00005_00002), aux74)
watched-or({gaceq(states_00002_00007,states_00003_00007),ineq(actionFrom_00002, 7, 0),w-literal(actionTo_00002,7)})
reifyimply(gaceq(states_00005_00003,states_00006_00002), aux75)
watched-or({gaceq(states_00004_00006,states_00003_00006),ineq(actionFrom_00003, 6, 0),w-literal(actionTo_00003,6)})
reifyimply(gaceq(states_00002_00003,states_00003_00002), aux76)
reifyimply(gaceq(states_00002_00007,states_00003_00006), aux77)
watched-or({w-literal(states_00002_00007,50),ineq(actionFrom_00001, 7, 0),w-literal(actionTo_00001,7)})
reifyimply(w-literal(states_00004_00007,8), aux78)
reifyimply(gaceq(states_00004_00003,states_00003_00004), aux79)
diseq(actionTo_00005,actionFrom_00005)
watchelement([states_00007_00001, states_00007_00002, states_00007_00003, states_00007_00004], aux38, actionValue_00006)
watched-or({gaceq(states_00004_00002,states_00005_00002),ineq(actionFrom_00004, 2, 0),w-literal(actionTo_00004,2)})
watched-or({modulo(actionValue_00001,13,aux47),div(aux14, 13, aux48)})
reifyimply(gaceq(states_00006_00003,states_00007_00002), aux80)
reifyimply(w-literal(states_00002_00004,12), aux81)
watched-or({ineq(actionFrom_00002, 8, 0),w-literal(actionTo_00002,8)})
watched-or({w-literal(states_00002_00004,39),ineq(actionFrom_00001, 4, 0),w-literal(actionTo_00001,4)})
watchelement([states_00009_00001, states_00010_00001], aux39, actionValue_00008)
watched-or({gaceq(states_00005_00002,states_00006_00002),ineq(actionFrom_00005, 2, 0),w-literal(actionTo_00005,2)})
watchelement([states_00002_00001, states_00002_00002, states_00002_00003, states_00002_00004, states_00002_00005, states_00002_00006, states_00002_00007, states_00002_00008, 8], aux44, actionValue_00001)
diseq(actionTo_00006,actionFrom_00006)
watched-or({gaceq(states_00004_00003,states_00005_00003),ineq(actionFrom_00004, 3, 0),w-literal(actionTo_00004,3)})
reifyimply(w-literal(states_00002_00008,9), aux82)
reifyimply(gaceq(states_00004_00004,states_00005_00003), aux83)
watched-or({gaceq(states_00002_00002,states_00003_00002),ineq(actionFrom_00002, 2, 0),w-literal(actionTo_00002,2)})
watched-or({gaceq(states_00004_00004,states_00003_00004),ineq(actionFrom_00003, 4, 0),w-literal(actionTo_00003,4)})
reifyimply(gaceq(states_00005_00006,states_00006_00005), aux84)
watched-or({div(actionValue_00008, 13, aux49),modulo(aux28,13,aux50)})
reifyimply(gaceq(states_00002_00006,states_00003_00005), aux85)
reifyimply(gaceq(states_00004_00006,states_00003_00007), aux86)
reifyimply(gaceq(states_00004_00002,states_00003_00003), aux87)
diseq(actionTo_00007,actionFrom_00007)
watched-or({gaceq(states_00002_00005,states_00003_00005),ineq(actionFrom_00002, 5, 0),w-literal(actionTo_00002,5)})
watchelement([states_00008_00001, states_00008_00002, states_00008_00003], aux37, actionValue_00007)
reifyimply(w-literal(states_00002_00005,25), aux88)
watched-or({gaceq(states_00004_00007,states_00003_00007),ineq(actionFrom_00003, 7, 0),w-literal(actionTo_00003,7)})
watchelement([states_00004_00001, states_00004_00002, states_00004_00003, states_00004_00004, states_00004_00005, states_00004_00006, states_00004_00007], aux40, actionValue_00003)
reifyimply(gaceq(states_00006_00004,states_00007_00003), aux89)
watchelement([states_00005_00001, states_00005_00002, states_00005_00003, states_00005_00004, states_00005_00005, states_00005_00006], aux43, actionValue_00004)
watched-or({w-literal(states_00002_00006,25),ineq(actionFrom_00001, 6, 0),w-literal(actionTo_00001,6)})
watchelement([states_00003_00001, states_00003_00002, states_00003_00003, states_00003_00004, states_00003_00005, states_00003_00006, states_00003_00007, 8], aux41, actionValue_00002)
diseq(actionTo_00008,actionFrom_00008)
reifyimply(gaceq(states_00007_00004,states_00008_00003), aux90)
reifyimply(gaceq(states_00004_00005,states_00005_00004), aux91)
reifyimply(gaceq(states_00005_00005,states_00006_00004), aux92)
watched-or({gaceq(states_00005_00005,states_00006_00005),ineq(actionFrom_00005, 5, 0),w-literal(actionTo_00005,5)})
watched-or({w-literal(states_00002_00003,0),ineq(actionFrom_00001, 3, 0),w-literal(actionTo_00001,3)})
reifyimply(gaceq(states_00002_00005,states_00003_00004), aux93)
watched-or({gaceq(states_00004_00002,states_00003_00002),ineq(actionFrom_00003, 2, 0),w-literal(actionTo_00003,2)})
watched-or({gaceq(states_00004_00006,states_00005_00006),ineq(actionFrom_00004, 6, 0),w-literal(actionTo_00004,6)})
reifyimply(gaceq(states_00004_00005,states_00003_00006), aux94)
reifyimply(gaceq(states_00010_00001,states_00008_00003), aux95)
watched-or({modulo(actionValue_00005,13,aux51),div(actionValue_00005, 13, aux52)})
diseq(actionTo_00001,actionFrom_00001)
watched-or({gaceq(states_00002_00003,states_00003_00003),ineq(actionFrom_00002, 3, 0),w-literal(actionTo_00002,3)})
watched-or({modulo(actionValue_00002,13,aux53),div(aux16, 13, aux54)})
watched-or({gaceq(states_00004_00005,states_00003_00005),ineq(actionFrom_00003, 5, 0),w-literal(actionTo_00003,5)})
watched-or({ineq(actionFrom_00001, 9, 0),w-literal(actionTo_00001,9)})
watched-or({gaceq(states_00006_00001,states_00007_00001),w-literal(actionTo_00006,1)})
watched-or({gaceq(states_00009_00001,states_00008_00001),w-literal(actionTo_00008,1)})
reifyimply(w-literal(states_00002_00002,0), aux96)
watched-or({w-literal(aux35,1),w-literal(aux35,3)})
watched-or({w-literal(aux36,1),w-literal(aux36,3)})
watched-or({w-literal(aux33,1),w-literal(aux33,3)})
watched-or({w-literal(aux34,1),w-literal(aux34,3)})
watched-or({w-literal(aux31,1),w-literal(aux31,3)})
watched-or({w-literal(aux32,1),w-literal(aux32,3)})
watched-or({w-literal(aux30,1),w-literal(aux30,3)})
reifyimply(gaceq(states_00006_00005,states_00007_00004), aux97)
watched-or({w-literal(states_00002_00008,24),ineq(actionFrom_00001, 8, 0),w-literal(actionTo_00001,8)})
reifyimply(gaceq(states_00004_00006,states_00005_00005), aux98)
reifyimply(gaceq(states_00007_00003,states_00008_00002), aux99)
diseq(actionTo_00002,actionFrom_00002)
watched-or({gaceq(states_00002_00006,states_00003_00006),ineq(actionFrom_00002, 6, 0),w-literal(actionTo_00002,6)})
reifyimply(w-literal(states_00002_00006,50), aux100)
watched-or({ineq(actionFrom_00006, 4, 0),gaceq(states_00006_00004,states_00007_00004),w-literal(actionTo_00006,4)})
watched-or({div(actionValue_00006, 13, aux55),modulo(actionValue_00006,13,aux56)})
watched-or({ineq(actionFrom_00006, 2, 0),gaceq(states_00006_00002,states_00007_00002),w-literal(actionTo_00006,2)})
reifyimply(gaceq(states_00005_00004,states_00006_00003), aux101)
watched-or({modulo(actionValue_00007,13,aux57),div(actionValue_00007, 13, aux58)})
watched-or({w-literal(states_00002_00001,22),w-literal(actionTo_00001,1)})
watched-or({div(states_00010_00001, 13, aux59),modulo(states_00010_00001,13,aux60)})
watched-or({w-literal(states_00002_00005,12),ineq(actionFrom_00001, 5, 0),w-literal(actionTo_00001,5)})
watched-or({gaceq(states_00005_00003,states_00006_00003),ineq(actionFrom_00005, 3, 0),w-literal(actionTo_00005,3)})
watched-or({gaceq(states_00007_00003,states_00008_00003),ineq(actionFrom_00007, 3, 0),w-literal(actionTo_00007,3)})
watched-or({gaceq(states_00002_00001,states_00003_00001),w-literal(actionTo_00002,1)})
reifyimply(gaceq(states_00002_00004,states_00003_00003), aux102)
reifyimply(gaceq(states_00004_00004,states_00003_00005), aux103)
watched-or({gaceq(states_00004_00001,states_00003_00001),w-literal(actionTo_00003,1)})
reifyimply(gaceq(states_00002_00008,states_00003_00007), aux104)
watched-or({gaceq(states_00004_00001,states_00005_00001),w-literal(actionTo_00004,1)})
watchelement([states_00006_00001, states_00006_00002, states_00006_00003, states_00006_00004, states_00006_00005], aux42, actionValue_00005)
watched-or({gaceq(states_00005_00001,states_00006_00001),w-literal(actionTo_00005,1)})
diseq(actionTo_00003,actionFrom_00003)
watched-or({div(aux21, 13, aux61),modulo(aux21,13,aux62)})
watched-or({gaceq(states_00004_00004,states_00005_00004),ineq(actionFrom_00004, 4, 0),w-literal(actionTo_00004,4)})
watched-or({gaceq(states_00010_00001,states_00008_00002),ineq(actionFrom_00008, 2, 0),w-literal(actionTo_00008,2)})
sumleq([actionFrom_00001,-2],aux63)
sumgeq([actionFrom_00001,-2],aux63)
sumleq([actionFrom_00002,-2],aux64)
sumgeq([actionFrom_00002,-2],aux64)
sumleq([actionFrom_00003,-2],aux65)
sumgeq([actionFrom_00003,-2],aux65)
sumleq([actionFrom_00004,-2],aux66)
sumgeq([actionFrom_00004,-2],aux66)
sumleq([actionFrom_00005,-2],aux67)
sumgeq([actionFrom_00005,-2],aux67)
sumleq([actionFrom_00006,-2],aux68)
sumgeq([actionFrom_00006,-2],aux68)
sumleq([actionFrom_00007,-2],aux69)
sumgeq([actionFrom_00007,-2],aux69)
sumleq([actionFrom_00008,-2],aux70)
sumgeq([actionFrom_00008,-2],aux70)
weightedsumleq([-1,1],[actionTo_00007,actionFrom_00007],aux30)
weightedsumgeq([-1,1],[actionTo_00007,actionFrom_00007],aux30)
weightedsumleq([-1,1],[actionTo_00005,actionFrom_00005],aux31)
weightedsumgeq([-1,1],[actionTo_00005,actionFrom_00005],aux31)
weightedsumleq([-1,1],[actionTo_00006,actionFrom_00006],aux32)
weightedsumgeq([-1,1],[actionTo_00006,actionFrom_00006],aux32)
weightedsumleq([-1,1],[actionTo_00003,actionFrom_00003],aux33)
weightedsumgeq([-1,1],[actionTo_00003,actionFrom_00003],aux33)
weightedsumleq([-1,1],[actionTo_00004,actionFrom_00004],aux34)
weightedsumgeq([-1,1],[actionTo_00004,actionFrom_00004],aux34)
weightedsumleq([-1,1],[actionTo_00001,actionFrom_00001],aux35)
weightedsumgeq([-1,1],[actionTo_00001,actionFrom_00001],aux35)
weightedsumleq([-1,1],[actionTo_00002,actionFrom_00002],aux36)
weightedsumgeq([-1,1],[actionTo_00002,actionFrom_00002],aux36)
sumleq([actionTo_00007,-1],aux37)
sumgeq([actionTo_00007,-1],aux37)
sumleq([actionTo_00006,-1],aux38)
sumgeq([actionTo_00006,-1],aux38)
sumleq([actionTo_00008,-1],aux39)
sumgeq([actionTo_00008,-1],aux39)
sumleq([actionTo_00003,-1],aux40)
sumgeq([actionTo_00003,-1],aux40)
sumleq([actionTo_00002,-1],aux41)
sumgeq([actionTo_00002,-1],aux41)
sumleq([actionTo_00005,-1],aux42)
sumgeq([actionTo_00005,-1],aux42)
sumleq([actionTo_00004,-1],aux43)
sumgeq([actionTo_00004,-1],aux43)
sumleq([actionTo_00001,-1],aux44)
sumgeq([actionTo_00001,-1],aux44)
weightedsumleq([-1,1],[actionTo_00008,actionFrom_00008],1)
weightedsumgeq([-1,1],[actionTo_00008,actionFrom_00008],1)
**EOF**
